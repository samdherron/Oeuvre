@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
        @*<li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>*@
        <li class="nav-item"><a class="nav-link @ManageNavPages.ProfileInformationNavClass(ViewContext)" id="profile" asp-page="./ProfileInformation">Account</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.addWorkNavClass(ViewContext)" id="email" asp-page="./addWork">Add Work</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.ArtworkNavClass(ViewContext)" id="change-password" asp-page="./Artwork">Artwork</a></li>
        @*@if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>*@
    </ul>


@*<ul>
    <li class=""><a class="nav-link @ManageNavPages.ProfileInformationNavClass(ViewContext)" id="profile" asp-page="./ProfileInformation">Account</a></li>
    <li class=""><a class="nav-link @ManageNavPages.addWorkNavClass(ViewContext)" id="email" asp-page="./addWork">Add Work</a></li>
    <li class=""><a class="nav-link @ManageNavPages.ArtworkNavClass(ViewContext)" id="change-password" asp-page="./Artwork">Artwork</a></li>
</ul>*@





