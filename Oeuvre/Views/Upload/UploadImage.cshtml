@model Oeuvre.Models.Image




@{
    ViewData["Title"] = "Upload";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Upload Images</h1>


<hr />
<div class="container">
    <form method="post" asp-controller="Upload" asp-action="UploadImageToLocal" enctype="multipart/form-data">
        <div class="row">
            <div class="col-lg-6">
                <label for="imageName">Image Name:</label>
                <br />
                <input class="form-control" id="formInput" type="text" />
            </div>

            <div class="col-md-6">
                <label for="imageArtist">Artist Name:</label>
                <br />
                <input class="form-control" type="text" />
            </div>
        </div>

        <br />

        <!-- Create a seperate row for the labels so they're not duplicated when adding new rows -->
        <div class="row">
            <div class="col-md-6">
                <label for="imageThemes">Theme Type:</label>
            </div>
            <div class="col-md-6">
                <label for="imageThemes">Theme:</label>
            </div>
        </div>

        <br />

        <div class="dynamicThemes">
            <!-- This div entire div will be duplicated when clicking the addition sign below-->
            <div id="dynamicThemesInitial" class="dynamicThemeMember" style="margin-bottom: 2%;">
                <div class="row">
                    <div class="col-md-6">
                        <select class="form-control">
                            <option>Colour</option>
                            <option>Age</option>
                            <option>Artist</option>
                            <option>Art Type</option>
                            <option>Genre</option>
                            <option>Other</option>
                        </select>
                    </div>

                    <div class="col-md-6">
                        <input class="form-control" type="text" placeholder="Red" />
                    </div>
                    <br />
                </div>
            </div>
            <!-- End of duplication -->
        </div>
        <br />

        <div class="row">
            <div class="col-sm-2">
                <img src="~/Icons/plusIcon2.png" height="24" width="24" onclick="addRow(this)" role="button" />
                <img src="~/Icons/xIcon.png" height="24" width="24" style="margin-left: 0.5em;" onclick="deleteRow(this)" role="button" />
            </div>

        </div>

        <br />
        <br />

        <div class="row">
            <div class="col-xl-12">
                <label for="imageDescription">Description:</label>
                <br />
                <textarea class="form-control" id="formInput"></textarea>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-xl-12" style="text-align: center;">
                <label id="previewHeader" style="display: none;" for="imagePreview">Preview:</label>
                <br />
                <img id="imagePreview" style="height: 80%; width: 80%; max-height: 850px;
                                       max-width: 700px; display: none; box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.5);" />
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-sm-3">
                <label id="imageLabel" for="file">Image:</label>
                <input id="imageUpload" type="file" name="image"
                       accept="image/png, image/jpeg" onchange="previewImage(event)">
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-sm-3">
                <input type="submit" value="Upload" class="btn btn-primary" />
            </div>
        </div>
    </form>
</div>


<script type="text/javascript">

    //The initial theme is not counted, just the dynamic theme inputs
    var themeCounter = 0;

    //Adds a new theme input row by cloning the parent node and generating a new ID
    function addRow() {
        var numberThemes = document.querySelectorAll('.dynamicThemeMember').length;
        console.log(numberThemes);
        let newThemeClone = document.querySelector('#dynamicThemesInitial').cloneNode(true);
        newThemeClone.setAttribute('id', 'dynamicTheme' + numberThemes);
        document.querySelector('.dynamicThemes').appendChild(newThemeClone);
        themeCounter += 1;
    }

    /*Deletes a new theme input row by getting the theme count and deleting the
      corresponding node from the parent */
    function deleteRow() {
        var numberThemes = document.querySelectorAll('.dynamicThemeMember').length;
        console.log(numberThemes);

        if (themeCounter > 0) {
            var elementID = "dynamicTheme" + (themeCounter);
            var topElement = document.getElementById(elementID);
            topElement.parentNode.removeChild(topElement);
            themeCounter -= 1;
        }
    }

</script>

<script type="text/javascript">
    /* Script will update the filename on the page upon selecting an image */
    $(document).ready(function () {
        $("#imageUpload").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).next("#imageLabel").html(fileName);
        })
    });
</script>

<script>
    /* Script will refresh image src with selected file, then display
       the image and the header */
    var previewImage = function (event) {
        var image = document.getElementById('imagePreview');
        var previewText = document.getElementById('previewHeader');
        previewText.style.display = "initial";
        image.style.display = "initial";
        image.src = URL.createObjectURL(event.target.files[0]);
    };
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

@section Styles {
    <link rel="stylesheet" href="~/css/UploadImage.css" />
}